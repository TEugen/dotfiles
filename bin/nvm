#!/bin/bash

NODEJS_PATH="$APPS_PATH/node.js"
NODEJS_RELEASES="$NODEJS_PATH/releases"

# Parse end return only the semver format
semver() {
  echo $@ | egrep -o '[0-9]*[.][0-9]*[.][0-9]*([0-9A-Za-z-]*)'
}


# check if a command exists
is_command() {
  hash $1 > /dev/null
}


get_installed_versions() {
  semver $(ls -d $NODEJS_PATH/versions/*) | sort -u -k 1,1n -k 2,2n -k 3,3n -t .
}


get_active_version() {
  is_command node && semver $(node --version)
}


select_version() {
  local items=($1)
  local length=${#items[@]}
  local selected=$2
  local index

  # clear screen
  clear

  # display list
  for (( i = 0; i <= $length; ++i )); do
    local mark=" "

    if [[ ${items[$i]} =~ $selected ]]; then
      mark=">"
      index=$i
    fi

    echo -e " $mark ${items[$i]}"
  done

  # read key input
  read -s -n 3 key

  case $key in
    $'\033[A') # key up
      index=$([ $index = 0 ] && printf $(($length - 1)) || printf $(($index - 1)))
      select_version "$1" "${items[$index]}"
    ;;

    $'\033[B') # key down
      index=$([ $index = $(($length - 1)) ] && printf 0 || printf $(($index + 1)))
      select_version "$1" "${items[$index]}"
    ;;

    "") # enter
      clear
      set_version $selected
    ;;

    *) clear ;;
  esac
}


set_version() {
  local version=$1

  echo "Setting node.js active version: $version"
  cp -R -f $NODEJS_VERSIONS/$version/* $NODEJS_PATH
  echo "Active node.js version: $(get_active_version)"
}


list() {
  local versions=$(get_installed_versions)
  local active=$(get_active_version)

  select_version "$versions" "$active"
}


install() {
  local version=$1
}


download_source() {
  local version=$1
  local arch="x86"
  local os

  case $OSTYPE in
    darwin*) os=darwin ;;
     linux*) os=linux ;;
     sunos*) os=sunos ;;
  esac

  case $(uname -a) in
    *x86_64*) arch=x64 ;;
    *armv6l*) arch=arm-pi ;;
  esac

  curl -o "http://nodejs.org/dist/v$version/node-v$version-$os-$arch.tar.gz"
}

is_installed() {
  local version=$1

  if [  ]


}


help() {
  echo "
  Usage: nvm <command> <options>

  Commands:
    list               List the installed node.js versions
    install            Install the latest stable node.js release
    install <version>  Install specific version
    install dev        Install the latest development node.js release
    remove <version>   Remove specific version
    use <version>      Execute specific node.js version
    help               Display help

  Aliases:
    ls  list
    i   install
    rm  remove
    h   help
"
}


main() {
  local command=$1

  # create folders if not available
  [ -d $NODEJS_PATH ] || mkdir -p $NODEJS_PATH/versions

  # parse arguments
  case $command in
        ls|list) list;;
      i|install) ;;
      rm|remove) ;;
            use) ;;
    -h|--help|*) help;;
  esac
}

main $@
